generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("EXTERNAL_DATABASE_URL")
}

model User {
  id                 String               @id @default(cuid())
  firstName          String
  lastName           String
  email              String               @unique
  password           String
  accountType        AccountType          @default(MEMBER)
  isAdmin            Boolean              @default(false)
  isSuperAdmin       Boolean              @default(false)
  emailToken         String?
  refreshToken       String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  emailVerified      Boolean              @default(false)
  profileStatus      ProfileStatus        @default(NOT_COMPLETED)
  role               UserRole             @default(MEMBER)
  comments           Comment[]
  conferences        ConferenceAttendee[]
  institutionProfile InstitutionProfile[]
  profile            MemberProfile[]
  dislikedPosts      Post[]               @relation("dislikedPosts")
  posts              Post[]               @relation("posts")
  likedPosts         Post[]               @relation("likedPosts")
  stateProfile       StateProfile[]
}

model MemberProfile {
  id                   String             @id @default(cuid())
  firstName            String
  lastName             String
  otherNames           String?
  bio                  String
  institution          String
  gender               Gender
  course               String
  occupation           String
  graduationStatus     GraduationStatus
  graduationDate       DateTime
  stateOfOrigin        String
  stateOfResidence     String
  phoneNumber          String
  email                String
  avatarUrl            String
  userId               String
  institutionProfileId String
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  institutionProfile   InstitutionProfile @relation(fields: [institutionProfileId], references: [id], onDelete: Cascade)
  user                 User               @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model InstitutionProfile {
  id              String          @id @default(cuid())
  acronym         String
  address         String
  lat             Int
  long            Int
  state           String
  zone            Zone
  email           String          @unique
  phoneNumber     String
  avatarUrl       String          @default("")
  stateProfileId  String
  userId          String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  institutionName INSTITUTIONS
  activities      Activity[]
  events          Event[]
  excos           ExcoProfile[]
  stateProfile    StateProfile    @relation(fields: [stateProfileId], references: [id])
  user            User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  members         MemberProfile[]
  patrons         PatronProfile[]
}

model ExcoProfile {
  id               String             @id @default(cuid())
  firstName        String
  lastName         String
  otherNames       String?
  courseOfStudy    String
  post             String
  occupation       String
  graduationStatus GraduationStatus
  graduationDate   DateTime
  stateOfOrigin    String
  stateOfResidence String
  email            String             @unique
  phoneNumber      String
  avatarUrl        String
  eventId          String
  institutionId    String
  stateProfileId   String
  zoneProfileId    String
  necProfileId     String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  events           Event              @relation(fields: [eventId], references: [id])
  institution      InstitutionProfile @relation(fields: [institutionId], references: [id])
  necProfile       NecProfile         @relation(fields: [necProfileId], references: [id])
  stateProfile     StateProfile       @relation(fields: [stateProfileId], references: [id])
  zoneProfile      ZoneProfile        @relation(fields: [zoneProfileId], references: [id])
}

model PatronProfile {
  id               String             @id @default(cuid())
  title            String
  firstName        String
  lastName         String
  otherNames       String?
  occupation       String
  placeOfWork      String
  stateOfResidence String
  post             String
  email            String
  phoneNumber      String
  avatarUrl        String             @default("")
  institutionId    String
  stateProfileId   String
  zoneProfileId    String
  necProfileId     String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  institution      InstitutionProfile @relation(fields: [institutionId], references: [id])
  necProfile       NecProfile         @relation(fields: [necProfileId], references: [id])
  stateProfile     StateProfile       @relation(fields: [stateProfileId], references: [id])
  zoneProfile      ZoneProfile        @relation(fields: [zoneProfileId], references: [id])
}

model Activity {
  id             String             @id @default(cuid())
  title          String
  venue          String
  time           DateTime
  desc           String
  institutionId  String
  stateProfileId String
  zoneProfileId  String
  necProfileId   String
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
  institution    InstitutionProfile @relation(fields: [institutionId], references: [id])
  necProfile     NecProfile         @relation(fields: [necProfileId], references: [id])
  stateProfile   StateProfile       @relation(fields: [stateProfileId], references: [id])
  zoneProfile    ZoneProfile        @relation(fields: [zoneProfileId], references: [id])
}

model Event {
  id              String             @id @default(cuid())
  title           String
  desc            String
  venue           String
  date            DateTime
  time            DateTime
  estimatedBudget Int
  institutionId   String
  stateProfileId  String
  zoneProfileId   String
  necProfileId    String
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  institution     InstitutionProfile @relation(fields: [institutionId], references: [id])
  necProfile      NecProfile         @relation(fields: [necProfileId], references: [id])
  stateProfile    StateProfile       @relation(fields: [stateProfileId], references: [id])
  zoneProfile     ZoneProfile        @relation(fields: [zoneProfileId], references: [id])
  createdBy       ExcoProfile[]
}

model StateProfile {
  id            String               @id @default(cuid())
  address       String
  state         String
  zone          Zone
  email         String               @unique
  phoneNumber   String
  avatarUrl     String
  userId        String
  zoneProfileId String
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  activities    Activity[]
  events        Event[]
  excos         ExcoProfile[]
  institutions  InstitutionProfile[]
  patrons       PatronProfile[]
  user          User                 @relation(fields: [userId], references: [id])
  zoneProfile   ZoneProfile          @relation(fields: [zoneProfileId], references: [id])
}

model ZoneProfile {
  id          String          @id @default(cuid())
  zone        Zone
  address     String
  email       String          @unique
  phoneNumber String
  avatarUrl   String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  activities  Activity[]
  events      Event[]
  excos       ExcoProfile[]
  patrons     PatronProfile[]
  states      StateProfile[]
}

model NecProfile {
  id          String          @id @default(cuid())
  address     String
  email       String          @unique
  phoneNumber String
  avatarUrl   String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  activities  Activity[]
  events      Event[]
  excos       ExcoProfile[]
  patrons     PatronProfile[]
}

model MailingList {
  email String @id @unique
}

model Broadcast {
  id             String         @id @default(cuid())
  title          String
  desc           String
  thumbnailUrl   String
  approvalStatus ApprovalStatus @default(PENDING)
  author         String
}

model Comment {
  id        String   @id
  userId    String
  postId    String
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Post {
  id            String    @id @default(cuid())
  title         String
  desc          String
  thumbnailUrl  String
  author        String
  userLikeId    String?   @default("") // Nullable with default value of empty string
  userDislikeId String?   @default("") // Nullable with default value of empty string
  userId        String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  comments      Comment[]
  dislikedBy    User?     @relation("dislikedPosts", fields: [userDislikeId], references: [id])
  createdBy     User      @relation("posts", fields: [userId], references: [id])
  likedby       User?     @relation("likedPosts", fields: [userLikeId], references: [id])
}


model Conference {
  id           String               @id @default(cuid())
  title        String
  desc         String
  venue        String
  thumbnailUrl String
  date         DateTime
  createdBy    String
  status       ConferenceStatus     @default(COMING_SOON)
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  attendees    ConferenceAttendee[]
}

model ConferenceAttendee {
  id             String                          @id @default(cuid())
  membershipType ConferenceMembershipType
  paymentStatus  ConferenceAttendeePaymentStatus
  conferenceId   String
  createdAt      DateTime                        @default(now())
  updatedAt      DateTime                        @updatedAt
  attendeeId     String
  attendee       User                            @relation(fields: [attendeeId], references: [id])
  conference     Conference                      @relation(fields: [conferenceId], references: [id], onDelete: Cascade)
}

enum ProfileStatus {
  NOT_COMPLETED
  COMPLETED
}

enum UserRole {
  MEMBER
  EXCO
  ADMIN
  SUPER_ADMIN
}

enum AccountType {
  MEMBER
  INSTITUTION
  STATE
  ZONAL
  NEC
}

enum Gender {
  MALE
  FEMALE
}

enum GraduationStatus {
  GRADUATE
  UNDER_GRADUATE
  POST_GRADUATE
}

enum Zone {m
  SOUTH_WEST
  NORTH_WEST
  NORTH_CENTRAL
  NORTH_EAST
}

enum INSTITUTIONS {
  UNIVERSITY_OF_ABUJA
  FEDERAL_COLLEGE_OF_EDUCATION_ZUBA
  KOGI_STATE_UNIVERSITY
  KOGI_STATE_POLYTECHNIC
  FEDERAL_UNIVERSITY_LOKOGA
  FEDERAL_POLYTECHNIC_IDAH
  COLLEGE_OF_HEALTH_SCIENCE_AND_TECHNOLOGY_IDAH
  UNIVERSITY_OF_ILORIN
  KWARA_STATE_UNIVERSITY_MOLETE
  COLLEGE_OF_EDUCATION_ILORIN
  COLLEGE_OF_EDUCATION_ORO
  FEDERAL_POLYTECHNIC_OFFA
  KWARA_STATE_POLYTECHNIC_ILORIN
  KWARA_STATE_COLLEGE_OF_HEALTH_TECHNOLOGY_OFFA
  COLLEGE_OF_EDUCATION_LAFIA_AJI
  FEDERAL_UNIVERSITY_LAFIA
  FEDERAL_POLYTECHNIC_NASSARAWA
  COLLEGE_OF_AGRICULTURE_LAFIA
  SCHOOL_OF_HEALTH_KEFFI
  COLLEGE_OF_EDUCATION_AKWANGA
  NASSARAWA_STATE_UNIVERSITY_KEFFI
  ISA_MUSTAPHA_AGWAEI_POLYTECHNIC_LAFIA
  FEDERAL_UNIVERSITY_OF_TECHNOLOGY_MINNA
  IBRAHIM_BADAMASI_BABANGIDA_UNIVERSITY_LAPAI
  FCE_KONTONGORA
  MODIBBO_ADAMA_UNIVERSITY_OF_TECHNOLOGY_YOLA
  FCE_YOLA
  COLLEGE_FOR_LEGAL_STUDIES_YOLA
  ADAMAWA_STATE_UNIVERSITY_MUBI
  ADAMAWA_STATE_POLYTECHNIC_YOLA
  FEDERAL_POLY_MUBI
  COLLEGE_OF_AGRIC_GANYE
  COLLEGE_OF_HEALTH_TECH_MUBI
  KANZUL_ISLAM_ACADEMY_YOLA
  SCHOOL_FOR_ARABIC_AND_ISLAMIC_STUDIES_YOLA
  ABUBAKAR_TAFAWA_BALEWA_UNIVERSITY
  BAUCHI_STATE_UNIVERSITY_GADAU
  BILL_AND_MELINDA_COLLEGE_OF_HEALTH_TECHNOLOGY_NINGI
  AMINU_SALE_COLLEGE_OF_EDUCATION_AZARE
  AD_RUFAI_COLLEGE_OF_EDUCATION
  LEGAL_AND_GENERAL_STUDIES_MISAU
  ADAMU_TAFAWA_BALEWA_COLLEGE_OF_EDUCATION_KANGERE
  BILYAMINU_USMAN_COLLEGE_OF_EDUCATION_DASS
  COLLEGE_OF_AGRICULTURE_BAUCHI
  UNIVERSITY_OF_MAIDUGURI
  RAMAT_POLYTECHNIC
  KASHIM_IBRAHIM_COLLEGE_OF_EDUCATION
  MUHAMMAD_GONI_COLLEGE_OF_LEGAL_AND_ISLAMIC_STUDIES
  FEDERAL_UNIVERSITY_KASHERE
  GOMBE_STATE_UNIVERSITY
  FEDERAL_COLLEGE_OF_EDUCATION
  SCHOOL_OF_LEGAL_AND_ISLAMIC_STUDIES_NAFADA
  COE_BILLIRI
  HEALTH_TECHNOLOGY_KALTUNGO
  FEDERAL_COLLEGE_OF_HORTICULTURE_DADIN_KOWA_GOMBE
  TARABA_STATE_UNIVERSITY
  YOBE_STATE_UNIVERSITY
  SULE_LAMIDO_UNIVERSITY
  JIGAWA_STATE_COLLEGE_OF_EDUCATION_GUMEL
  FEDERAL_UNIVERSITY_DUTSE
  HUSSAINI_ADAMU_FEDERAL_POLYTECHNIC_HADEJA
  NCE_RINGIM
  JIGAWA_STATE_POLYTECHNIC
  AHMADU_BELLO_UNIVERSITY_ZARIA
  KADUNA_STATE_UNIVERSITY
  KADUNA_STATE_POLYTECHNIC
  NUHU_BAMALI_POLYTECHNIC_ZARIA
  FEDERAL_COLLEGE_OF_EDUCATION_ZARIA
  DIVISION_OF_AGRICULTURE_ABU_ZARIA
  FEDERAL_COOPERATIVE_COLLEGE_KADUNA
  COLLEGE_OF_HEALTH_SCIENCE_AND_TECHNOLOGY_MAKARFI
  SCHOOL_OF_BASIC_AND_REMEDIAL_STUDIES_ABU
  SCHOOL_OF_NURSING_ABU_TEACHING_HOSPITAL_TUDUN_WADA
  BAYERO_UNIVERSITY_KANO
  KANO_UNIVERSITY_OF_SCIENCE_AND_TECHNOLOGY_WUDIL
  FEDERAL_COLLEGE_OF_EDUCATION_BICHI
  MAITAMA_SULE_UNIVERSITY
  FEDERAL_COLLEGE_OF_EDUCATION_KANO
  UMARU_MUSA_YARADUWA_UNIVERSITY_KATSINA
  FEDERAL_UNIVERSITY_DUTSINMMA
  ISAH_KAITA_COLLEGE_OF_EDUCATION
  HASSAN_USMAN_POLYTECHNIC_KATSINA
  FEDERAL_COLLEGE_OF_EDUCATION_KATSINA
  SCHOOL_OF_HEALTH_TECHNOLOGY_KANKIYA
  SCHOOL_OF_NURSING_KATSINA
  YUSUF_BALA_USMAN_SCHOOL_OF_LEGAL_STUDIES_KATSINA
  FEDERAL_UNIVERSITY_BIRNIN_KEBBI
  KEBBI_STATE_UNIVERSITY_OF_SCIENCE_AND_TECHNOLOGY_ALIERU
  WAZIRI_UMMARU_FEDERAL_POLYTECHNIC_BIRNIN_KEBBI
  COLLEGE_OF_AGRICULTURE_ZURU
  ADAMU_AUGI_COLLEGE_OF_EDUCATION_ARGUNGU
  KEBBI_STATE_POLYTECHNIC_DAKINGARI
  SCHOOL_OF_NURSING_BIRNIN_KEBBI
  KEBBI_STATE_COLLEGE_OF_HEALTH_JEGA
  USMANU_DANFODIYO_UNIVERSITY_SOKOTO
  SOKOTO_STATE_UNIVERSITY
  COLLEGE_OF_EDUCATION_SOKOTO
  UMMARU_ALI_SHINKFI_POLYTECHNIC_SOKOTO
  FEDERAL_UNIVERSITY_GUSAU
  FEDERAL_POLYTECHNIC_KAURA_NAMDODA
  FEDERAL_COLLEGE_OF_EDUCATION_TECHNICAL_GUSAU
  COLLEGE_OF_EDUCATION_MARU
  COLLEGE_OF_HEALTH_SCIENCE_AND_TECHNOLOGY_TSAFE
  SCHOOL_OF_NURSING_AND_MIDWIFE_PRE_GUSAU
  ABDU_GUSAU_POLYTECHNIC_TALATA_MAFARA
  COLLEGE_OF_AGRICULTURE_AND_ANIMAL_SCIENCE_BAKURA
  ZAMFARA_COLLEGE_OF_ART_AND_SCIENCE_GUSAU
  EKITI_STATE_UNIVERSITY
  FEDERAL_UNIVERSITY_OYE_EKITI
  YABA_COLLEGE_OF_EDUCATION_YABA
  ADENIRAN_OGUNSANYA_COLLEGE_OF_EDUCATION_IJANIKIN
  UNIVERSITY_OF_LAGOS_AKOKA
  LAGOS_STATE_POLYTECHNIC_IKORODU
  LAGOS_STATE_COLLEGE_OF_HEALTH_AND_TECH_YABA
  LAGOS_STATE_UNIVERSITY_OJO
  FEDERAL_COLLEGE_OF_EDUCATION_AND_TECHNICAL_YABA
  FEDERAL_POLYTECHNIC_ILARO
  MOSHOOD_ABIOLA_POLYTECHNIC
  OLABISI_ONABANJO_UNIVERSITY
  FCE_OSIELE_ABEOKUTA
  OGUN_STATE_INSTITUTE_OF_TECHNOLOGY_IGBESA
  TAI_SHOLARIN_UNIVERSITY_OF_EDUCATION
  FEDERAL_UNIVERSITY_OF_AGRICULTURE_ABEOKUTA
  OGUN_STATE_COLLEGE_OF_HEALTH_TECHNOLOGY
  FEDERAL_UNIVERSITY_OF_TECHNOLOGY_AKURE
  ADEKUNLE_AJASIN_UNIVERSITY_AKUNGBA
  ADEYEMI_UNIVERSITY
  OBAFEMI_AWOLOWO_UNIVERSITY_ILE_IFE
  OSUN_STATE_UNIVERSITY_OSOGBO
  FEDERAL_POLYTECHNIC_EDE
  OSUN_STATE_COLLEGE_OF_HEALTH_ILESHA
  OSUN_STATE_COLLEGE_OF_EDUCATION_ILA_OROGUN
  ASANUSIYAH_COLLEGE_ODE_OMU
  OSUN_STATE_UNIVERSITY_OSOGBO_IKIRE_CAMPUS
  UNIVERSITY_OF_IBADAN
  OYO_STATE_COLLEGE_OF_HEALTH_SCIENCE_AND_TECH_ELEYELE_IBADAN
  LADOKE_AKINTOLA_UNIVERSITY_OF_TECHNOLOGY_OGBOMOSHO
  OYO_STATE_COLLEGE_OF_AGRICULTURE_AND_TECHNOLOGY_IGBOORA
  EMMANUEL_ALAYANDE_COLLEGE_OF_EDUCATION_OYO
  FEDERAL_COLLEGE_OF_AGRICULTURE_MOOR_PLANTATION
  OKE_OGUN_POLYTECHNIC_SAKI
  MUFUTAU_LANIHUN_COLLEGE_OF_EDUCATION_IBADAN
  POLYTECHNIC_OF_IBADAN
}

enum ApprovalStatus {
  APPROVED
  PENDING
}

enum ConferenceStatus {
  COMING_SOON
  OVER
}

enum ConferenceMembershipType {
  TIMSANITE
  IOTB
  OTHERS
}

enum ConferenceAttendeePaymentStatus {
  PAYMENT_SUCCESSFUL
  PAYMENT_PENDING
}

model HealthCheck {
  id String @id @default(cuid())
name String
email String
age Int?
   createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}